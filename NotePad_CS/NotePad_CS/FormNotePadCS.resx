<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>117, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQED/AAAAAAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABIAABMLAAATCwAAAAAAAAAA
        AAAAAAAAUD0NALaiswCuihoA7+jrAJyMogB3ZYAA4tPAAJ6JkQBeUWgAioiEAI5sAADOwL4AppFiAFRG
        XACKhoMAhoF0AM20egChjEoArJSUAKaioQCLcWMAWElDAL64uADUxtAA5+DkAICAgAB8d28A0LqUAIxt
        UQClijwAcmlaAMSsgABWRjsAsqysALaysgDKqUwAopCEAJqFgwDNsGYArZqiAJiDQwBwVAAAzsTKAPHr
        7QC5lCQAxaRNAMOgPABzZHoAwbCmAMmuaQCxnJEA5t7hAHZdUACjjJQAkHmPAH56dAC5oH8A3NLVAMq7
        tADt5ukA8+7wAFtJKAC6sLsAuaa1ALmkowCmgwkApIyEAI2CbADCpmUAqYszAODW2wCykz8AfnGFALGe
        pADVys4A0cG6AMy8yQBqXUwAqZWmAIp0jACYgpcAy73DAKySgQBjSQAArpFQAIJnXAB9Yi8AlZKSAKCL
        ngC7pZcAtKKlANC8pACQhHsAXE1lAGtccwCShFwAmH5wAKqKLAC8mTMAYlQ8AJaJgADJtbYArJqSALec
        bACTfXcA3tXZANPEwwCSdBoAwqy0AKyUiwC7qaUA0rl9AJSCkwBkWEIAybW8AJyASACMfY0A4trdAM60
        dQCmkqUA2c7TAMOytQBPPhgArZqqAGhUHwCDbIUAg3haAOjf4wCLg30AhXSLAF5SYwB7ZH0A2cvMALGd
        rgDg1tQAn4InAL6aLACdipwAyqtaANLFygB7cVcAso4gAKCIdQBdUFQAt6u4AL2tugDKu70AxLbCAKKL
        RABmWW4AnpuaAM3CxQDHspoAXEw0ALyqrQCbilYAvJo8ALOdmwC6nY0AnXoBAMWrcgBgSx8AjoRlALWS
        KgB6c2cAmIFyANK7hQDVw6oAdnBkALWjqgDFvMMA1cGcAFlDCgCajIUAi4qJAMSjQwCqlqgAsZI2AGJV
        YAC5pq0AmZGMALqeXACSfJMAlYSaAOri5QDKt6oAvauyAKqVnAB2an0Ax7KMAHFoVwDby74ArKWpAMKe
        NACMfJIA1cnGAK2afACsm54AtJAiAKaRmQCahJoAin9lAIB+fACRj44AvqiOAGdSJQCkkJQAz8jHAHxr
        ggDEtLsAnIWNAFxNTAB2aGUAoo6iAIKAfQDFub0AgHmBALumngDTvY4A1svSAMGzrABjVWsA07RiAImC
        cwC4ljgAlIRTALWhngCZlpUArJqOANzQzAB5aX4ApI2NAM+9rwCnhBUA0a9UALqWKADXwpQArZE9ALyy
        tADQtnEAzLSCAFZIXgDColIArowiAHlcAwB/Y1IAa2BMAIZsXgDCrqIAU0EZAKqRdQBbTDwAoIV/AFJA
        FgDRv8YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD++gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqVKLV5zAwX7PUFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALC1dxUMOC0dFJ0TCWlpazkNQhAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6mzot9ZQt3h41gUFuMOCgknR
        MF/e3rODkBYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQkh0ita3yQLWt1B+0QYw
        MDDR0YLDw4JJ0b0wloODAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPRIJbexdQJ4t4LR
        MF9fX95eXl5eCd7eX18w0YKC0dHnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdVU+KydaG
        yVDRMHGUahk0ais/fIqCvd7yDg7yXl4J3l/RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRQ3J
        eFAC1rd+hJEsLCwsLCwsLCwsLCw8aiuRKHFJX14OXjCKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///n/////////+f/////////gA////////8AAB///////wAAAD
        /////+AAAAB/////4AAAAB/////gAAAAB////8AAAAAB////wAAAAAD////AAAAAAH///8AAAAAAH///
        gAAAAAAf//+AAAAAAB///4AAAAAAP///gAAAAAA///+AAAAAAH///wAAAAAAf///AAAAAAD///8AAAAA
        Af///wAAAAAB///+AAAAAAP///4AAAAAA////gAAAAAH///+AAAAAAf///4AAAAAD////AAAAAAP///8
        AAAAAB////wAAAAAH////AAAAAA////4AAAAAD////gAAAAAf///+AAAAAB////4AAAAAP////gAAAAA
        ////8AAAAAH////wAAAAAf////AAAAAB////8AAAAAP////gAAAAA////+AAAAAD////4AAAAAf////g
        AAAAB////+AAAAAP////wAAAAA/////AAAAAD////8AAAAAf////wAAAAB/////AAAAAH////4AAAAA/
        ////gAAAAD////+AAAAAf////4AAAAB/////AAAAAH////8AAAAA/////wAAAAD/////AAAAAf////+A
        AAAD/////8AAAAf/////4AAAD//////wAF////////g3////////////////////////////
</value>
  </data>
</root>